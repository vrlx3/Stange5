{"version":3,"sources":["components/header.js","components/reguser.js","components/createpost.js","components/renderPosts.js","components/loguser.js","components/logoutuser.js","components/renderme.js","components/createme.js","components/myren.js","index.js"],"names":["Header","id","to","Reguser","useState","username","setUsername","password","setPassword","registered","setRegistered","onSubmit","ev","a","preventDefault","fetch","method","headers","body","JSON","stringify","user","then","response","json","result","console","log","data","token","localStorage","setItem","catch","error","alert","type","placeholder","value","onChange","e","target","minLength","required","Create","title","setTitle","description","setDescription","price","setPrice","getItem","handleSubmit","post","location","pathname","assign","RenderPosts","posts","setPosts","res","fetchPost","delthispost","Search","event","searchText","toLowerCase","filteredPosts","filter","includes","htmlFor","name","map","_id","willDeliver","author","isAuthor","onClick","confirmlogin","window","reload","LogUser","className","LogOutUser","RenderMe","all","filtered","x","active","CreateMe","Myren","userState","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89abd895.chunk.js","sourcesContent":["import {BrowserRouter as Router, Route, Link } from 'react-router-dom'\nimport {LogOutUser, Myren} from './index'\n\n\n\nconst Header = () => {\n    \n    return (\n        <div id='header'>\n            <div id='navbar'>\n            <Link to='/'> Home</Link>\n\n           \n            \n            {/* <Link to='/login'>Login</Link>\n                \n            <Link to='/registration'>Register</Link> \n            \n            \n            <Link to='/myposts'>My Posts</Link> */}\n            <Myren/>\n            \n            <Link to='/allPosts'>All Posts</Link>\n            \n            \n            <LogOutUser/>\n\n               \n             </div>\n         </div>\n    )\n}\n\nexport default Header;\n\n","import React, {useState} from 'react'\n\n\nconst Reguser = () => {\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [registered, setRegistered] = useState(false)\n    // const [token, setToken] = useState('')\n\n    const handleSubmit = () =>{\n\n    }\n\n    return <div id='reguser'>\n            <form onSubmit={async  (ev) => {\n        ev.preventDefault();\n        fetch('https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/users/register', {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            user: {\n              username,\n              password\n              }\n          })\n        }).then(response => response.json())\n          .then(result => {\n            console.log(result.data.token);\n            // setToken(result.data.token)\n            localStorage.setItem(\"token\", result.data.token)\n            setRegistered(true)\n          })\n          .catch(console.error)\n          // .then(alert('Username Alerady Taken'))\n          if(registered === true) {\n            alert('Thank you for registering')\n          } else if(registered === false) {\n            alert('Please try again user name taken')\n          }\n          // console.log(token)\n                      \n      }}>\n            <input id='username' type='text' placeholder='Choose Username' value={username} onChange={ (e) => {setUsername(e.target.value)}}></input>\n            <p></p>\n            <input id='password' type='text' placeholder='Choose Password' minLength={8} required value={password} onChange={ (e) => { setPassword(e.target.value)}}></input>\n            <p></p>\n            {/* <input id='confirmpassword' type='text' placeholder='Confirm Password' value={confirmpassword} onChange={ (e) => { if(password === confirm) setPassword(e.target.value)}}></input>\n            <p></p> */}\n            <button type='submit' >Register</button>\n            </form>\n            </div>\n          \n    \n}\n    \n\n\nexport default Reguser;","import React, {useState} from 'react';\nimport Reguser from './reguser'\n\n\nconst Create = () => {\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n\n  \n\n\n    const token = 'Bearer ' + localStorage.getItem(\"token\")\n    // console.log('token is ', token)\n\n    const handleSubmit =  async (ev) => {\n        ev.preventDefault();\n        \n\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/posts', {\n                                method: 'POST',\n                                headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': token\n                                },\n                                body: JSON.stringify({\n                                post: {\n                                title,\n                                description,\n                                price,\n                                                       \n                             }                     \n                         })  \n                          \n                     })\n        const data = await response.json();\n        console.log('data ', data);\n        //setPosts([data,...posts])\n        setTitle('')\n        setDescription('')\n        setPrice('')\n                     \n      console.log(location.pathname)\n\n        location.assign(\"/allPosts\")\n    }\n\n    return <>\n            <h3 id= 'makepost'>Create a Post</h3>\n            <form id= 'postmake'onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={title}\n                    onChange={(ev) => setTitle(ev.target.value)}            \n                    />\n                <input\n                    type=\"text\"\n                    placeholder=\"Description\"\n                    value={description}\n                    onChange={(ev) => setDescription(ev.target.value)}\n                    />\n                <input\n                    type=\"text\"\n                    placeholder=\"Price\"\n                    value={price}\n                    onChange={(ev) => setPrice(ev.target.value)}\n                    />\n                    \n                <button type=\"submit\">Create</button>\n            </form>\n            \n            </>\n\n}\n\nexport default Create;","import React, { useState } from 'react'\nimport ReactDOM from 'react'\nimport EditPost from './editpost'\nimport Delete from './delete'\nimport Create from './createpost'\n\n\n\nconst url =  'https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/posts'\n\nconst RenderPosts = () => {\n   const [posts, setPosts] = useState([]);\n   console.log(posts)\n   const token = 'Bearer ' + localStorage.getItem(\"token\")\n\n   useState( () => {\n        const fetchPost = async () => {\n            const response = await fetch(url, \n                {\n                    method: 'GET',\n                    headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': token\n                    }});\n            const res = await response.json();\n           \n            setPosts(res.data.posts);\n        }\n        fetchPost ();\n  \n   }, [])\n\n    const delthispost = async function(target)  {\n     console.log(target)\n\n        const response = await fetch(`https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/posts/${target}`, { \n                method: \"DELETE\",\n                headers: {\n                     'Content-Type': 'application/json',\n                     'Authorization': token\n                  }\n             });\n            const result = await response.json();\n            console.log('result', result);\n\n            location.assign(\"/allposts\")\n\n\n\n           \n            };\n            const Search = async (event) => {\n                event.preventDefault();\n                const searchText = event.target[0].value.toLowerCase();\n                RenderPosts().then((result) => {\n                    const filteredPosts = result.filter( (post) => {\n                        return post.title.toLowerCase().includes(`${searchText}`) || post.description.toLowerCase().includes(`${searchText}`)\n                    });\n                    setPosts(filteredPosts);\n                });\n   }\n\n   return (\n    <div id='allPosts'>\n            <form id=\"searchbar\" onSubmit={Search}>\n                <label htmlFor=\"searchterm\">Search: </label>\n                <input name=\"searchterm\" type=\"text\" placeholder=\"search\"/>\n                <button type=\"submit\" >Submit</button>\n            </form>\n        <Create/>\n\n        <h1>All Posts</h1>\n       \n        \n        {\n            posts.map(post => <div key={post._id} id={post._id}> \n                        \n            <h3 id='post_title'>{post.title}</h3>\n            {/* <i>Description</i> */}\n            <p id='post_description'>{post.description}</p>\n            <p id='post_price'>Price: {post.price}</p>\n            <p id='post_location'>Location: {post.location}</p>\n            <p id='post_deliver'>{post.willDeliver ? 'Delivery Included' : 'Pickup Only'}</p>\n            <p id='post_user'>Posted By: {post.author.username}</p>\n\n            {/* <EditPost  postId={post._id} className='editpost'/> */}\n            {/* <Delete delkey={post._id}/> */}\n            {post.isAuthor ? <button  onClick={(ev) => delthispost(post._id)}>Delete</button> : null}\n            <hr></hr>\n            \n            \n            </div>)\n\n            \n        }\n        \n    </div>\n   )\n    \n    \n}\n\nexport default RenderPosts;\n","import React, {useState} from 'react'\n\nfunction confirmlogin(){\n  window.location.reload();\n} \n\nconst LogUser = () => \n{\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    \n\n    const handleSubmit =async (ev) => \n    {\n        ev.preventDefault();\n        console.log( username, password);\n        fetch('https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/users/login', {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              user: {\n                username,\n                password\n              }\n            })\n          }).then(response => response.json())\n            .then(result => {\n              console.log(result.data.token);\n              localStorage.setItem(\"token\", result.data.token)\n            })\n            \n            .catch(console.error);\n            alert('Thank You for Logging In! Please Confirm Login')\n            \n        \n        setUsername('')\n        setPassword('')\n       \n      \n    }\n    \n\n    return <>\n    <div id='logform'>\n    <form  onSubmit={handleSubmit} className='loginuser'>\n        <input \n            type=\"text\"\n            placeholder=\"Enter Username\"\n            value={username}\n            onChange={(ev) => setUsername(ev.target.value)}            \n            />\n            <p></p>\n        <input\n            type=\"text\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(ev) => setPassword(ev.target.value)}\n            />\n        <p></p>\n        <button type=\"submit\"    >Login</button>\n        <button type=\"submit\" onClick={confirmlogin}>Confirm Login</button>\n        \n    </form>\n    </div>\n    </>\n\n\n}\n\n\nexport default LogUser;","import React, {useState} from 'react'\n\nconst LogOutUser = () => \n{\n    const handleSubmit =  async (ev) => \n    {\n        ev.preventDefault();\n        localStorage.setItem(\"token\", '')\n    }\n    return <>\n    <form onSubmit={handleSubmit}>\n    \n        <button type=\"submit\">Log Out</button>\n    </form>\n    </>\n}\n\nexport default LogOutUser","import React, { useState } from 'react'\nimport {EditPost, DeletePost, CreateMe} from './index'\n\nconst url =  'https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/users/me'\n\n\n\nconst RenderMe = () => {\n   const [posts, setPosts] = useState([]);\n   \n   const token = 'Bearer ' + localStorage.getItem(\"token\")\n\n   useState( () => {\n        const fetchPost = async () => {\n            const response = await fetch(url, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': token\n                },\n            });\n            const res = await response.json();\n            //  console.log(res.data.posts)\n            const all = res.data.posts\n            const filtered = all.filter(x => x.active === true)\n            console.log(all)\n            console.log(filtered)\n            setPosts(filtered);\n        }\n        fetchPost ();\n  \n   }, [])\n\n   const delthispost = async function(target)  {\n    console.log(target)\n\n       const response = await fetch(`https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/posts/${target}`, { \n               method: \"DELETE\",\n               headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': token\n                 }\n            });\n           const result = await response.json();\n           console.log('result', result);\n\n           location.assign(\"/myposts\")\n\n  }\n\n   return <>\n    <CreateMe />\n    <div id='mypost'>\n        <h1>My Posts</h1>\n        {   \n\n           posts.map(post => <div key={post._id} id={post._id} > \n                        \n            <h3 id='post_title'>{post.title}</h3>\n            {/* <i>Description</i> */}\n            <p id='post_description'>{post.description}</p>\n            <p id='post_price'>Price: {post.price}</p>\n            <p id='post_location'>Location: {post.location}</p>\n            <p id='post_deliver'>{post.willDeliver ? 'Delivery Included' : 'Pickup Only'}</p>\n            {/* <p id='post_user'>Posted By: {post.author.username}</p> */}\n            {/* <EditPost  className='editpost'/> */}\n            <button  onClick={(ev) => delthispost(post._id)}>Delete</button>\n            <hr></hr>\n            </div>\n            )\n        }\n        \n    </div>\n   </>\n    \n    \n}\n\nexport default RenderMe;\n","import React, {useState} from 'react';\nimport Reguser from './reguser'\n\n\nconst CreateMe = () => {\n    const [title, setTitle] = useState('')\n    const [description, setDescription] = useState('')\n    const [price, setPrice] = useState('')\n\n  \n\n\n    const token = 'Bearer ' + localStorage.getItem(\"token\")\n    // console.log('token is ', token)\n\n    const handleSubmit =  async (ev) => {\n        ev.preventDefault();\n        \n\n        const response = await fetch('https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/posts', {\n                                method: 'POST',\n                                headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': token\n                                },\n                                body: JSON.stringify({\n                                post: {\n                                title,\n                                description,\n                                price,\n                                                       \n                             }                     \n                         })  \n                          \n                     })\n        const data = await response.json();\n        console.log('data ', data);\n        //setPosts([data,...posts])\n        setTitle('')\n        setDescription('')\n        setPrice('')\n                     \n      console.log(location.pathname)\n\n        location.assign(\"/myposts\")\n    }\n\n    return <>\n            <h3 id= 'makepost'>Create a Post</h3>\n            <form id= 'postmake'onSubmit={handleSubmit}>\n                <input \n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={title}\n                    onChange={(ev) => setTitle(ev.target.value)}            \n                    />\n                <input\n                    type=\"text\"\n                    placeholder=\"Description\"\n                    value={description}\n                    onChange={(ev) => setDescription(ev.target.value)}\n                    />\n                <input\n                    type=\"text\"\n                    placeholder=\"Price\"\n                    value={price}\n                    onChange={(ev) => setPrice(ev.target.value)}\n                    />\n                    \n                <button type=\"submit\">Create</button>\n            </form>\n            \n            </>\n\n}\n\nexport default CreateMe;","import {BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport React,{useEffect, useState} from 'react'\n\n\n\n\nconst Myren = () => {\n    // const [userState, setUserState] = useState(false)\n    // setUserState(!!localStorage.getItem('token'))\n\n    let userState = !!localStorage.getItem('token')\n\n    console.log('logged in ', userState)\n\n    if (!!userState) {\n        return <Link to='/myposts'>My Posts</Link>\n    } else if (!userState) {\n        return <>\n             <Link to='/login'>Login</Link>\n                \n                <Link to='/registration'>Register</Link>\n                </>\n    }\n\n    \n}\n\nexport default Myren;\n","import axios from 'axios'\nimport React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport {Header, Reguser, RenderPosts, LogUser, LogOutUser,DeletePost,RenderMe} from './components'\nimport {BrowserRouter as Router, Route,} from 'react-router-dom'\n\n\n\nconst BASE = 'https://strangers-things.herokuapp.com/api/2104-UIC-RM-WEB-FT/'\n\n\n// \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGI2NTkzY2VkODRkNjAwMTcxYWJiZDIiLCJ1c2VybmFtZSI6InR3ZW50Ymxrc2J2a2pzeXZsYnZsZGZudmxnaGt1ZGZoIiwiaWF0IjoxNjIyNTYzMTMyfQ.O3crL9IJRzXNlVrw01vxfOErnlhrtmar3PGV76DgXOo\"\n\n\n{/* <Router path ='/puppies' render={()=> < Puppies />} />  */}\n\n\n\nconst App = () => {\n\n       \n\n    return (\n        <Router>\n    <div id='app'>\n        <Header/>\n        \n    \n        <div id='page'>\n\n\n            \n            \n           \n            <div>Welcome to Stranger's Things</div>\n            {/* <Link to='/posts'>Register</Link> */}\n            \n       \n           \n        </div>\n\n        \n        <Route path ='/registration' component={Reguser}/>\n        {/* <Router path ='/puppies' render={()=> < Puppies />} />  */}\n        <Route path ='/login' component={LogUser}/>\n     \n        \n        <Route path ='/myposts' component={RenderMe}/>\n        <Route path='/allPosts' component={RenderPosts}/>\n        \n        <p></p>\n        \n    </div>\n\n    </Router>\n    )\n\n}\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}